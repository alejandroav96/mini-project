{"version":3,"sources":["helpers/firebase/firebase.ts","components/Loading/Loading.tsx","helpers/providers/auth.tsx","components/Header/Header.tsx","components/ListUsers/ListUsers.tsx","services/axiosConfig.ts","services/users.ts","pages/Home/Home.tsx","helpers/base64.ts","pages/SignUp/SignUp.tsx","pages/SignIn/SignIn.tsx","models/User.ts","services/profile.ts","pages/Profile/Profile.tsx","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["firebase","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","google","GoogleAuthProvider","Loading","className","CircularProgress","Auth","React","createContext","AuthContext","children","useState","user","setUser","showChild","setShowChild","useEffect","isLogin","onAuthStateChanged","Provider","value","Header","anchorEl","setAnchorEl","open","Boolean","isSignIn","useContext","getEmail","currentUser","undefined","handleClose","AppBar","position","Toolbar","Typography","variant","to","Button","color","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","signOut","then","ListUsers","props","setOpen","ListItem","alignItems","ListItemAvatar","image","Avatar","alt","name","src","ListItemText","primary","secondary","Fragment","description","substr","Divider","component","Dialog","aria-labelledby","aria-describedby","DialogTitle","email","DialogContent","DialogContentText","DialogActions","autoFocus","axiosIntance","axios","create","baseURL","timeout","headers","UsersService","get","post","Home","users","setUsers","getData","res","data","generateList","map","uid","List","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","SignUp","setError","useForm","mode","register","handleSubmit","formState","errors","reset","history","useHistory","onSubmit","a","createUserWithEmailAndPassword","password","authUser","push","catch","message","Container","maxWidth","type","placeholder","ref","required","typeof","accept","htmlFor","disabled","isValid","SignIn","redirect","signInWithEmailAndPassword","signInWithPopup","INITIAL_USER","createdAt","getToken","getIdToken","ProfileService","Authorization","update","put","Profile","edit","setEdit","call","setCall","changeEdit","defaultValue","Card","CardHeader","avatar","action","title","subheader","CardMedia","CardContent","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.242e757b.chunk.js","sourcesContent":["\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyC5POoFt8b96cmTFhB_Uo910YZNJcU7hMI\",\n    authDomain: \"mini-project-a8159.firebaseapp.com\",\n    databaseURL: \"https://mini-project-a8159.firebaseio.com\",\n    projectId: \"mini-project-a8159\",\n    storageBucket: \"mini-project-a8159.appspot.com\",\n    messagingSenderId: \"647495386470\",\n    appId: \"1:647495386470:web:b2203758013b77ce97f4a7\"\n};\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n}\n\nexport const auth = firebase.auth();\nexport const google = new firebase.auth.GoogleAuthProvider();","import CircularProgress from '@material-ui/core/CircularProgress'\nimport React from 'react'\nimport './Loading.scss'\n\nexport const Loading: React.FC = () => {\n    return (\n        <div className=\"loading-center\">\n            <CircularProgress />\n        </div>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { Loading } from \"../../components/Loading/Loading\";\nimport { firebase } from \"../firebase\";\n\nexport const Auth = React.createContext<boolean>(false);\n\nexport const AuthContext = ({ children }: any) => {\n    const [user, setUser] = useState<boolean>(false);\n    const [showChild, setShowChild] = useState(false);\n\n    useEffect(() => {\n        isLogin();\n    });\n\n    const isLogin = () => {\n        firebase.auth.onAuthStateChanged((user: any) => {\n            user ? setUser(true) : setUser(false);\n            setShowChild(true);\n        });\n    }\n\n    if (!showChild) {\n        return <Loading />;\n    } else {\n        return (\n            <Auth.Provider\n                value={user}\n            >\n                {children}\n            </Auth.Provider>\n        );\n    }\n};","import AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { User } from \"firebase\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { firebase } from '../../helpers/firebase';\nimport { Auth } from \"../../helpers/providers/auth\";\nimport './Header.scss';\n\n\nexport interface HeaderProps { }\n\nexport const Header: React.FC<HeaderProps> = () => {\n    const [user, setUser] = useState<User>();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n    const isSignIn = useContext(Auth);\n\n    useEffect(() => {\n        getEmail();\n    });\n\n    const getEmail = () => {\n        if (isSignIn) {\n            let user = firebase.auth.currentUser;\n            if (user) setUser(user);\n        }\n        else setUser(undefined);\n    }\n    const signOut = () => {\n        firebase.auth.signOut().then(() => { });\n    }\n\n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div className=\"base\">\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className=\"title\">\n                        <Link to=\"/\" className=\"link\">Home</Link>\n                    </Typography>\n                    {!user && (\n                        <Link to=\"/signin\" className=\"link\">\n                            <Button variant=\"contained\" color=\"secondary\">signIn</Button>\n                        </Link>\n                    )}\n                    {user && (\n                        <div>\n\n                            <IconButton\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                color=\"inherit\"\n                                onClick={handleMenu}\n                            >\n                                <AccountCircle />\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={anchorEl}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                open={open}\n                                onClose={handleClose}\n                            >\n                                <Link to=\"/profile\" className=\"link-menu\">\n                                    <MenuItem onClick={handleClose}>Profile</MenuItem>\n                                </Link>\n                                <Link to=\"/\" onClick={signOut} className=\"link-menu\">\n                                    <MenuItem onClick={handleClose}>Sign out</MenuItem>\n                                </Link>\n                            </Menu>\n                        </div>\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}","import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport React from \"react\";\nimport { User } from \"../../models/User\";\nimport './ListUsers.scss';\n\nexport interface ListUsersProps {\n    user: User;\n}\n\nexport const ListUsers: React.FC<ListUsersProps> = props => {\n    const [open, setOpen] = React.useState(false);\n    let user = props.user;\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <ListItem alignItems=\"flex-start\" onClick={handleClickOpen}>\n                <ListItemAvatar>\n                    {user.image ? (<Avatar alt={user.name} src={user.image} />) : (<Avatar>{user.name[0]}</Avatar>)}\n                </ListItemAvatar>\n                <ListItemText\n                    primary={user.name}\n                    secondary={<React.Fragment>\n                        {user.description.length> 200 ? user.description.substr(0,200)+\"...\" : user.description}\n                    </React.Fragment>} />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{user.name} - {user.email}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {user.image ? <img src={user.image} alt={user.name} className=\"image-dialog\" /> : <b></b>}\n                        {user.description}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}","import axios from 'axios';\n\nexport const axiosIntance = axios.create({\n  baseURL: \"/api\",\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n","import { User } from '../models/User';\nimport { axiosIntance } from './axiosConfig';\n\nexport const UsersService = {\n  getAll: () => axiosIntance.get(\"/users\"),\n  create: (user: User) => axiosIntance.post(\"/users\", user),\n};\n","import List from '@material-ui/core/List';\nimport React, { useEffect, useState } from \"react\";\nimport { ListUsers } from \"../../components/ListUsers/ListUsers\";\nimport { User } from \"../../models/User\";\nimport { UsersService } from \"../../services/users\";\nimport './Home.scss';\n\nexport interface HomeProps { }\nexport const Home: React.FC<HomeProps> = () => {\n    const [users, setUsers] = useState<User[]>();\n\n    useEffect(() => {\n        getData();\n    });\n\n    const getData = () => {\n        if (users == null) {\n            UsersService.getAll().then((res: any) => {\n                setUsers(res.data);\n            })\n        }\n    }\n\n    const generateList = users?.map(\n        user => (\n            <ListUsers key={user.uid} user={user}></ListUsers>\n        )\n    )\n\n    return (\n        <div>\n            <List className=\"list\">\n                {generateList}\n            </List>\n        </div>\n    )\n}","export const toBase64 = (file: any) => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n});","import Button from \"@material-ui/core/Button\";\nimport Container from '@material-ui/core/Container';\nimport React, { useState } from \"react\";\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from \"react-router-dom\";\nimport { toBase64 } from \"../../helpers/base64\";\nimport { firebase } from '../../helpers/firebase';\nimport { UsersService } from '../../services/users';\nimport './SignUp.scss';\n\nexport interface SignUpProps { }\n\nexport const SignUp: React.FC<SignUpProps> = () => {\n    const [error, setError] = useState(null);\n\n    const { register, handleSubmit, formState, errors, reset } = useForm({\n        mode: 'onChange',\n    });\n\n    let history = useHistory();\n\n    const onSubmit = async (data: any) => {\n        data.image = await toBase64(data.image[0]);\n        reset();\n        firebase.auth.createUserWithEmailAndPassword(data.email, data.password).then((authUser: any) => {\n            data.uid = authUser.user.uid;\n            UsersService.create(data).then((res: any) => {\n                history.push(\"/\");\n            }).catch(error => {\n                setError(error.message);\n            })\n        }).catch(error => {\n            setError(error.message);\n        });\n    }\n\n    return (\n        <div>\n            <Container maxWidth=\"sm\" className=\"container-signup\">\n                {error && <p className=\"error\">{error}</p>}\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"container-input\">\n                        <label>Name</label>\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            placeholder=\"Alejandro Alvarez\"\n                            name=\"name\"\n                            ref={register({ required: true })}\n                            className={errors.name && 'invalid'}\n                        />\n                    </div>\n                    <div className=\"container-input\">\n                        <label>Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            placeholder=\"alejandro.alvarez@ceiba.com.co\"\n                            name=\"email\"\n                            ref={register({\n                                required: true\n                            })}\n                            className={errors.email && 'invalid'}\n                        />\n                    </div>\n                    <div className=\"container-input\">\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            placeholder=\"password\"\n                            name=\"password\"\n                            ref={register({\n                                required: true\n                            })}\n                            className={errors.password && 'invalid'}\n                        />\n                    </div>\n                    <div className=\"container-input\">\n                        <label>Description</label>\n                        <textarea\n                            typeof=\"text\"\n                            id=\"description\"\n                            placeholder=\"I am physical engineer\"\n                            name=\"description\"\n                            ref={register({ required: true })}\n                            className={errors.description && 'invalid'}\n                        ></textarea>\n                    </div>\n                    <div className=\"container-input\">\n                        <label>Picture</label>\n                        <input accept=\"image/*\" id=\"image\" name=\"image\" ref={register({ required: true })} type=\"file\" />\n                        <label htmlFor=\"image\">\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                                Upload\n                            </Button>\n                        </label>\n                        <Button type=\"submit\" variant=\"contained\" disabled={!formState.isValid} className=\"button\">SignUp</Button>\n                    </div>\n                </form>\n            </Container>\n        </div>\n    )\n}","import Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { firebase } from \"../../helpers/firebase\";\nimport { Auth } from \"../../helpers/providers/auth\";\nimport './SignIn.scss';\n\nexport interface SignInProps { }\n\nexport const SignIn: React.FC<SignInProps> = () => {\n    const [error, setError] = useState(null);\n    const isSignIn = useContext(Auth);\n    let history = useHistory();\n\n    useEffect(() => {\n        redirect();\n    });\n\n    const redirect = () => {\n        if (isSignIn) history.push(\"/profile\");\n    }\n\n    const { register, handleSubmit, formState, errors, reset } = useForm({\n        mode: 'onChange',\n    });\n\n    const onSubmit = (data: any) => {\n        reset();\n        firebase.auth.signInWithEmailAndPassword(data.email, data.password).then((authUser: any) => {\n        }).catch(error => {\n            setError(error.message);\n        });\n    }\n\n    const googleSignIn = () => {\n        firebase.auth.signInWithPopup(firebase.google).then((authUser: any) => {\n        }).catch(error => {\n            setError(error.message);\n        });\n    }\n\n    const goSignUp = () => {\n        history.push(\"/signup\");\n    }\n\n    return (\n        <div>\n            <Container maxWidth=\"sm\" className=\"container\">\n            {error && <p className=\"error\">{error}</p>}\n                <form>\n                    <div className=\"container-input\">\n                        <label>Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            placeholder=\"alejandro.alvarez@ceiba.com.co\"\n                            name=\"email\"\n                            ref={register({\n                                required: true\n                            })}\n                            className={errors.email && 'invalid'}\n                        />\n                    </div>\n                    <div className=\"container-input\">\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            placeholder=\"password\"\n                            name=\"password\"\n                            ref={register({\n                                required: true\n                            })}\n                            className={errors.password && 'invalid'}\n                        />\n                    </div>\n                </form>\n                <div className=\"container-button\">\n                    <Button onClick={handleSubmit(onSubmit)} variant=\"contained\" disabled={!formState.isValid} className=\"button\">SignIn</Button>\n                    <Button variant=\"contained\" color=\"primary\" onClick={googleSignIn} className=\"button\">Signin With Google</Button>\n                    <p>Or</p>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={goSignUp}>SignUp now!</Button>\n                </div>\n\n                \n\n            </Container>\n        </div>\n    )\n}","export interface User {\n    uid: string;\n    name: string;\n    email: string;\n    description: string;\n    image: string;\n    createdAt: string;\n}\n\nexport const INITIAL_USER: User = {\n    uid: \"\",\n    name : \"\",\n    email: \"\",\n    description: \"\",\n    image: \"\",\n    createdAt: \"\"\n}","import { firebase } from '../helpers/firebase';\nimport { User } from '../models/User';\nimport { axiosIntance } from './axiosConfig';\n\nconst getToken = async () => {\n  return await firebase.auth.currentUser?.getIdToken();\n}\n\nexport const ProfileService = {\n  get: async () => axiosIntance.get(\"/profile\", {\n    headers: {\n      Authorization: await getToken()\n    }\n  }),\n\n  update: async (user: User) => axiosIntance.put(\"/profile\", user, {\n    headers: {\n      Authorization: await getToken()\n    }\n  }),\n};\n","import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Edit from '@material-ui/icons/Edit';\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { toBase64 } from '../../helpers/base64';\nimport { Auth } from \"../../helpers/providers/auth\";\nimport { INITIAL_USER, User } from \"../../models/User\";\nimport { ProfileService } from \"../../services/profile\";\nimport './Profile.scss';\n\nexport interface ProfileProps { }\n\nexport const Profile: React.FC<ProfileProps> = () => {\n    const [edit, setEdit] = useState<Boolean>(false);\n    const [error, setError] = useState(null);\n    const [user, setUser] = useState<User>(INITIAL_USER);\n    const [call, setCall] = useState(false);\n    const isSignIn = useContext(Auth);\n    let history = useHistory();\n\n    useEffect(() => {\n        redirect();\n        getData();\n    });\n\n    const redirect = () => {\n        if (!isSignIn) history.push(\"/\");\n    }\n\n    const getData = () => {\n        if (!call) {\n            ProfileService.get().then((res: any) => {\n                setUser(res.data);\n            }).catch(error => {\n                setError(error.message);\n            })\n        }\n        setCall(true);\n    }\n\n    const { register, handleSubmit, errors } = useForm({\n        mode: 'onSubmit',\n    });\n\n    const onSubmit = async (data: any) => {\n        if (data.image[0]) {\n            data.image = await toBase64(data.image[0]);\n            user.image = data.image;\n        } else data.image = null;\n        ProfileService.update(data).then((res: any) => {\n            changeEdit();\n            user.name = data.name;\n            user.description = data.description;\n            setUser(user);\n        }).catch(error => {\n            setError(error.message);\n        })\n    }\n\n    const changeEdit = () => {\n        setEdit(!edit);\n    }\n\n    if (!edit) {\n        return (\n            <div className=\"container-card-wrapper\">\n                <Card className=\"container-card\">\n                    <CardHeader\n                        avatar={\n                            <Avatar aria-label={user.name}>\n                                {user.name[0]}\n                            </Avatar>\n                        }\n                        action={\n                            <IconButton aria-label=\"settings\" onClick={changeEdit}>\n                                <Edit />\n                            </IconButton>\n                        }\n                        title={user.name}\n                        subheader={user.email}\n                    />\n                    {user.image && (\n                        <CardMedia\n                            className=\"image\"\n                            image={user.image}\n                            title={user.name}\n                        />\n                    )}\n                    <CardContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {user.description}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    } else {\n        return (\n            <Container maxWidth=\"sm\" className=\"container-profile\">\n                {error && <p className=\"error\">{error}</p>}\n                <form>\n                    <div className=\"container-input\">\n                        <label>Name</label>\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            placeholder=\"Alejandro Alvarez\"\n                            defaultValue={user.name}\n                            name=\"name\"\n                            ref={register({\n                                required: true\n                            })}\n                            className={errors.name && 'invalid'}\n                        />\n                    </div>\n                    <div className=\"container-input\">\n                        <label>Description</label>\n                        <textarea\n                            typeof=\"text\"\n                            id=\"description\"\n                            placeholder=\"I am physical engineer\"\n                            name=\"description\"\n                            defaultValue={user.description}\n                            ref={register({ required: true })}\n                            className={errors.description && 'invalid'}\n                        ></textarea>\n                    </div>\n                    <div className=\"container-input\">\n                        <label>Picture</label>\n                        <input accept=\"image/*\" id=\"image\" name=\"image\" ref={register()} type=\"file\" />\n                        <label htmlFor=\"image\">\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                                Upload\n                            </Button>\n                        </label>\n                    </div>\n                </form>\n                <div className=\"container-button-profile\">\n                    <Button onClick={changeEdit} variant=\"contained\" color=\"secondary\" className=\"button\">Cancel</Button>\n                    <Button onClick={handleSubmit(onSubmit)} variant=\"contained\" className=\"button\">Save</Button>\n                </div>\n            </Container>\n        )\n    }\n}\n","import React from 'react';\nimport { Header } from './components/Header/Header';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Home } from './pages/Home/Home';\nimport { SignUp } from './pages/SignUp/SignUp';\nimport { SignIn } from './pages/SignIn/SignIn';\nimport { AuthContext } from './helpers/providers/auth';\nimport { Profile } from './pages/Profile/Profile';\n\nfunction App() {\n  return (\n    <AuthContext>\n      <BrowserRouter>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/profile\" component={Profile} />\n        </Switch>\n      </BrowserRouter>\n    </AuthContext>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\nreportWebVitals();\n"],"sourceRoot":""}